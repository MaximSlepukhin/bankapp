version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-bank
    environment:
      POSTGRES_DB: bankdb
      POSTGRES_USER: bankuser
      POSTGRES_PASSWORD: bankpass
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d

  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 5s
      retries: 5

  accounts-service:
    build:
      context: .
      dockerfile: accounts-service/Dockerfile
    container_name: accounts-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bankdb
      SPRING_DATASOURCE_USERNAME: bankuser
      SPRING_DATASOURCE_PASSWORD: bankpass
    depends_on:
      - postgres
      - discovery-server

  cash-service:
    build:
      context: .
      dockerfile: cash-service/Dockerfile
    container_name: cash-service
    ports:
      - "8091:8091"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bankdb
      SPRING_DATASOURCE_USERNAME: bankuser
      SPRING_DATASOURCE_PASSWORD: bankpass
    depends_on:
      - postgres
      - discovery-server

  transfer-service:
    build:
      context: .
      dockerfile: transfer-service/Dockerfile
    container_name: transfer-service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bankdb
      SPRING_DATASOURCE_USERNAME: bankuser
      SPRING_DATASOURCE_PASSWORD: bankpass
    depends_on:
      - postgres
      - discovery-server

  exchange-service:
    build:
      context: .
      dockerfile: exchange-service/Dockerfile
    container_name: exchange-service
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bankdb
      SPRING_DATASOURCE_USERNAME: bankuser
      SPRING_DATASOURCE_PASSWORD: bankpass
    depends_on:
      - postgres
      - discovery-server

  blocker-service:
    build:
      context: .
      dockerfile: blocker-service/Dockerfile
    container_name: blocker-service
    ports:
      - "8086:8086"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bankdb
      SPRING_DATASOURCE_USERNAME: bankuser
      SPRING_DATASOURCE_PASSWORD: bankpass
    depends_on:
      - postgres
      - discovery-server

  notifications-service:
    build:
      context: .
      dockerfile: notifications-service/Dockerfile
    container_name: notifications-service
    ports:
      - "8087:8087"
    depends_on:
      - discovery-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/

  exchange-generator-service:
    build:
      context: .
      dockerfile: exchange-generator-service/Dockerfile
    container_name: exchange-generator-service
    ports:
      - "8088:8088"
    depends_on:
      - discovery-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/

  front-ui:
    build:
      context: .
      dockerfile: front-ui/Dockerfile
    container_name: front-ui
    ports:
      - "8080:8080"
    depends_on:
      - discovery-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    container_name: gateway
    ports:
      - "8090:8082"  # gateway внутри Docker 8082, внешний 8090
    depends_on:
      - accounts-service
      - cash-service
      - transfer-service
      - exchange-service
      - blocker-service
      - notifications-service
      - front-ui
      - discovery-server
      - exchange-generator-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/

volumes:
  postgres-data:
